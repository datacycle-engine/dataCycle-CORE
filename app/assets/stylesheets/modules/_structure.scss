body {
  min-height: 100vh;
  display: flex;
  flex-flow: column;
}

.alert-color {
  color: $alert-color;
}

.warning-color {
  color: $warning-color;
}

.off-canvas-wrapper {
  position: relative;
  flex: auto;
  display: flex;
  flex-flow: column;
  overflow: unset;
}

.off-canvas-content {
  flex: auto;
  display: flex;
  flex-flow: column nowrap;

  .inner-container {
    flex: auto;
  }
}

button,
input,
optgroup,
select,
textarea {
  font-family: $body-font-family;
}

.fa {
  font-size: 1.1rem;
}

/* Header */

header {
  z-index: 1007;
  position: relative;
  border-top: 5px solid $customercolor;

  .top-bar {
    display: flex;
    height: 4.1rem;
    width: 100%;
    padding: 0;
    line-height: 4.1rem;
    background: $black;

    .logo {
      padding: 0 0 0 1rem;
      display: flex;
      width: auto;
      flex: auto;
      float: none;
      align-items: center;
      justify-content: flex-start;

      img {
        height: 50px;
        min-width: 50px;
      }
    }

    .title {
      color: $white;
      float: left;
      position: relative;
      padding: 0;
      font-size: 1.2em;
      font-weight: 200;
      float: none;
      margin-left: 1rem;
      white-space: nowrap;
    }

    .top-bar-title {
      padding: 0;
      flex: 1 1 auto;
      display: flex;
      float: none;

      a {
        display: flex;
      }
    }

    .top-bar-splitter {
      flex: auto;
    }

    .top-bar-right {
      ul.menu {
        display: flex;

        li {
          flex: 1 1 auto;

          a,
          button {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
          }
        }
      }
    }
  }

  ul.menu {
    line-height: 4.1rem;
    height: 4.1rem;

    >li {
      height: 4.1rem;

      a,
      button {
        height: 100%;
        line-height: 4.1rem;
      }
    }

    li {
      vertical-align: top;

      a,
      button {
        color: $white;
        font-size: 1rem;
        padding: 0 1.5rem;
        line-height: 64px;
        border-bottom: 0;

        i.icon-right {
          margin-left: 0.75rem;
          margin-right: 0;
        }

        &:focus,
        &:hover {
          color: $light-gray;
        }
      }

      button.show-sidebar {
        background: darken($black, 3%);
        border-radius: 0;

        .fa::before {
          content: '\f0c9';
          width: 1rem;
          height: 1rem;
          display: inline-flex;
          align-items: center;
          justify-content: center;
          line-height: 1rem;
        }

        &[aria-expanded='true'] {
          outline: none;
          color: $black !important;
          background: $white !important;

          .fa::before {
            font-size: 1.2rem;
            content: '\f00d';
          }
        }

        &:focus,
        &:hover {
          background: darken($black, 7%);
        }

        span {
          position: relative;
        }
      }
    }
  }
}

@keyframes fadeInGlassContainer {
  0% {
    opacity: 0;
    box-shadow: none;
  }

  100% {
    opacity: 1;
    box-shadow: 0 3px 13px rgba(0, 0, 0, 0.3);
  }
}

/* new object element */

a.button-prime.new-object-circle,
button.button-prime.new-object-circle {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  z-index: 1005;
}

.new-object.reveal {
  position: absolute;
  overflow: initial;
  bottom: 7.6rem;
  right: 1rem;
  top: auto !important;
  padding: 0;
  border: 0;
  background-color: $white;
  max-width: 32rem;
  box-shadow: 1px 4px 2px 0px rgba(0, 1, 1, 0.2);

  &:focus,
  &:active {
    border: 0;
    outline: 0;
  }

  .new-object-links {
    max-height: 80vh;
    overflow-y: auto;
  }

  .new-favorites {
    a.option:last-child {
      border-bottom: 1px solid $light-gray;
      margin-bottom: 2px;
    }
  }

  a.option {
    border-bottom: 1px solid $light-gray;
    padding: 0.5rem;
    display: block;
    padding: 1rem;
    color: $black;
    font-size: 1.5rem;
    font-weight: 200;
    transition: $global-transition;
    border-radius: $global-radius;

    &.default-new-option {
      border-top: 1px solid $light-gray;
      font-weight: 600;
      font-style: italic;
    }

    .fa {
      font-size: 1.5rem;
      width: 2rem;
      margin-right: 1rem;
      text-align: center;
    }

    &:last-child {
      border-bottom: 0;

      &:after {
        transition: $global-transition;
        @include css-triangle(1.5rem, $white, 'down');
        position: absolute;
        bottom: -1.5rem;
        right: 1.5rem;
        filter: drop-shadow(1px 4px 2px rgba(0, 1, 1, 0.2));
      }

      &:hover:after {
        @include css-triangle(1.5rem, $primary-color, 'down');
      }
    }

    &:focus,
    &:hover {
      background: $primary-color;
      color: $white;
    }
  }
}

a.button-prime,
button.button-prime {
  position: relative;
  display: block;
  text-align: center;
  background-color: map-get($foundation-palette, primary);
  border-radius: 50%;
  outline: none;
  box-shadow: 1px 1px 2px rgba($black, 0.3);
  transition: $global-transition;
  width: 4rem;
  height: 4rem;
  line-height: 4rem;
  padding: 0;

  &.alert {
    background-color: map-get($foundation-palette, alert) !important;

    &:focus,
    &:hover {
      background-color: lighten(map-get($foundation-palette, alert), 10%) !important;
    }
  }

  &.warning {
    margin: 0;
    background-color: map-get($foundation-palette, warning);

    &:focus,
    &:hover {
      background-color: lighten(map-get($foundation-palette, warning), 10%);
    }
  }

  &.success {
    background-color: map-get($foundation-palette, success);

    &:focus,
    &:hover {
      background-color: lighten(map-get($foundation-palette, success), 10%);
    }
  }

  &.secondary {
    background-color: map-get($foundation-palette, secondary);

    &:focus,
    &:hover {
      background-color: lighten(map-get($foundation-palette, secondary), 10%);
    }
  }

  i {
    color: $white;
    position: relative;
    display: block;
    line-height: 4rem;
    height: 100%;
    width: 100%;
    font-size: 2.8rem;
  }

  &:focus,
  &:hover {
    background-color: lighten($primary-color, 10%);
  }

  &.small {
    height: 3rem;
    width: 3rem;

    &[disabled] {
      cursor: not-allowed;
      opacity: 0.25;
    }

    i {
      line-height: 3rem;
      font-size: 1.5rem;
    }
  }
}

/* Home */

body.with-glass {
  background-color: darkgrey;
  background-position: center bottom;
  background-attachment: fixed;
  background-size: cover;
  background-image: var(--dc-background-image-url);
  border-top: 5px solid $customercolor;
  display: flex;
  align-items: center;
  justify-content: center;

  .off-canvas-content {
    background: none;
  }

  header,
  .off-canvas-wrapper {
    display: none;
  }

  ul.footer-links li {
    color: $black;

    a {
      color: $black;
      text-decoration: underline;
    }
  }
}

ul.footer-links {
  width: 100%;
  margin: 0;
  text-align: center;

  li {
    display: inline-block;

    &:not(:last-child)::after {
      content: ' | ';
    }
  }
}

.home-container {
  max-width: 500px;
  overflow: hidden;
  margin: 50px auto;
  width: 70%;
  padding: 0;
  animation: 1s ease-in-out 500ms 1 fadeInGlassContainer;
  animation-fill-mode: both;

  .logo {
    img {
      max-height: 60px;
      max-width: 75%;
      width: auto;
    }
  }

  .home-container-content {
    color: $black;
    overflow: hidden;
    backface-visibility: hidden;
    position: relative;
    border-bottom: 1px solid;
    border-bottom-color: rgba(255, 255, 255, 0.2);
    padding: rem-calc(15) 0;

    &.footer {
      .footer-image {
        display: flex;
        float: none;
        align-items: center;
        justify-content: center;
      }
    }

    .centered-text {
      text-align: center;
    }

    a.button {
      font-weight: bold;
      font-size: 1rem;
      padding: 1rem 2rem;
    }

    a.forgotten_password_link {
      display: block;
      text-align: right;
      font-size: 0.9rem;
      color: $black;
      text-decoration: underline;
    }

    .login-checkboxes {
      a {
        text-decoration: underline;
        color: $black;
      }
    }

    button[type='submit'].button {
      padding: 0.2rem 4.5rem;

      i {
        font-size: 3rem;
      }
    }

    .login-form {
      h3 {
        border-top: 1px solid rgba(255, 255, 255, 0.2);
        padding-top: 0.5rem;
        font-size: 2rem;
        font-weight: normal;
        text-align: center;
      }

      button[type='submit'].button {
        background-color: darken($dark-gray, 20%);
        padding: 0.8rem 1rem;

        &:hover,
        &:focus {
          background-color: darken($dark-gray, 30%);
        }
      }
    }

    fieldset.with-border {
      padding: 0.5rem 0 0 0;
      border: 1px solid var(--darker-gray);
      margin: 0 0 1rem 0;
      border-radius: var(--medium-radius);

      legend {
        padding: 0 0.5rem;
        font-weight: 600;
        font-size: 0.9rem;
        margin: 0 0.5rem;
      }
    }
  }

  .home-logo {
    padding: 10px 0 0 0;
  }

  h1 {
    text-align: center;
  }

  .accordion {
    margin-bottom: 0;
    background: none;
    line-height: initial;

    li.accordion-item {
      a.accordion-title {
        &.without-content {
          &::before {
            content: '';
          }
        }

        border: 0;
        color: $black;
        text-align: center;
        font-size: 2rem;
        padding: 1rem 0;
        border-top: 1px solid rgba(255, 255, 255, 0.2);

        i {
          font-size: 2rem;
          margin-right: 0.75rem;
        }

        &::before {
          top: 30%;
        }

        &:hover,
        &:focus {
          background: none;
        }

        &:hover {
          color: $black;
          opacity: 0.7;
        }
      }
    }

    .accordion-content {
      border: 0;
      padding: 0;
      border: 0;
      background: none;
      color: $black;
    }
  }

  form {
    margin-top: 1rem;

    label {
      color: $black;
    }
  }
}

.glass {
  backface-visibility: hidden;
  position: relative;
  border-radius: 10px;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);

  input,
  button,
  .button {
    border-radius: $global-radius;
  }
}

.home-container.reset-password {
  main {
    padding: 1rem 0;

    h1 {
      font-size: 1.75rem;
    }

    form {
      ul.errors {
        margin: 1rem;
        padding: 1rem;
        background: rgba(map-get($foundation-palette, alert), 0.95);
        list-style-type: none;
      }

      button[type='submit'].button {
        padding: 1rem 1rem;
        font-size: 1rem;
      }

      span.error {
        display: none;
      }
    }
  }
}

.close-button {
  padding: 0;
}

// compact flash-notifications
.flash-messages {
  position: fixed;
  display: flex;
  z-index: 10001;
  width: 100vw;
  flex-flow: column nowrap;
  align-items: center;
  pointer-events: none;
  top: 0;
}

.toast-notification {
  animation: slideIn 0.5s ease-in-out both;

  &[data-auto-dismiss] {
    // dont rename slideOut. It is used in the javascript to determine when the toast is done animating
    animation: slideIn 0.5s ease-in-out both, slideOut 0.5s ease-in-out var(--_time) forwards;
  }

  min-height: 2.8rem;
  position: relative;
  display: block;
  margin: 1rem 0 0 0;
  padding: 0.7rem 2.5rem 0.7rem 1rem;
  border: 0;
  font-weight: 600;
  box-shadow: 0px 3px 7px rgba(0, 0, 0, 0.3);
  pointer-events: auto;
  flex: auto;
  max-width: 90vw;
  color: var(--white);
  border-radius: var(--global-radius);

  .close-button,
  .close-button.medium {
    line-height: 2rem;
    padding: 0;
    right: 0.5rem;
    top: 0.4rem;
    color: var(--white);

    span {
      padding: 0 0.3rem;
      line-height: 2rem;
    }
  }

  &:hover {
    animation-play-state: paused;

    .toast-timer-bar {
      animation-play-state: paused;
    }
  }

  &.success {
    background: var(--success-color);
  }

  &.alert {
    background: var(--alert-color);
  }

  &.info {
    background: var(--warning-color);
    color: var(--black);

    .close-button,
    .close-button.medium {
      color: var(--black);
    }
  }

  a {
    color: inherit;
    text-decoration: underline;
  }

  .toast-timer-bar {
    width: 100%;
    height: 0.3rem;
    background: rgba(0, 0, 0, 0.15);
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 1;
    border-radius: 0 0 0.3rem 0.3rem;
    animation: toast-timer-bar-animation var(--_time) linear;
  }
}

@keyframes toast-timer-bar-animation {
  0% {
    width: 100%;
  }

  100% {
    width: 0;
  }
}

@keyframes slideIn {
  0% {
    transform: translateY(100%);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideOut {
  0% {
    transform: translateY(0);
    opacity: 1;
  }

  100% {
    transform: translateY(-100%);
    opacity: 0;
  }
}

.pixelpoint-sso-login {
  display: flex;
  width: 3.6rem;
  opacity: 0.7;
  position: absolute;
  right: 1rem;
  bottom: 1rem;
  transition: $opacity-transition;
  padding: 0.3rem;
  align-items: center;
  justify-content: center;

  &:hover {
    opacity: 1;
  }
}

.dc-checkbox {
  position: relative;

  >input {
    position: absolute;
    top: 0.4rem;
    opacity: 0;
    width: 16px;
    height: 16px;
    z-index: -1;
  }

  >label {
    display: inline-flex;
    align-items: center;
    justify-content: flex-start;
    padding: 0.3rem 0;
    margin: 0;
    cursor: pointer;
    font-weight: normal;
    line-height: normal;
    gap: 0.3rem;

    &::before {
      content: '\f00c';
      font-family: FontAwesome;
      display: inline-flex;
      background-color: $white;
      border: 1px solid darken($medium-gray, 5%);
      border-radius: $global-radius;
      height: 16px;
      width: 16px;
      align-items: center;
      justify-content: center;
      font-size: 11px;
      margin-right: 0.1rem;
      color: $white;
      transition: $global-transition;
      text-shadow: none;
    }
  }

  >input:checked+label {
    &::before {
      color: $white;
      background-color: $primary-color;
      border-color: $primary-color;
    }
  }

  >input[required]+label {
    &::after {
      content: '*';
      display: inline-flex;
      align-items: center;
      justify-content: center;
      margin-left: 0.1rem;
      color: $alert-color;
      text-shadow: none;
    }
  }

  >input:not(:disabled)+label:hover::before {
    color: darken($medium-gray, 5%);
  }

  >input:disabled+label {
    cursor: not-allowed;

    &::before {
      color: $light-gray;
      background-color: $light-gray;
    }
  }

  >input:checked:disabled+label::before {
    color: $light-gray;
    background-color: $dark-gray;
    border-color: $dark-gray;
  }
}

.flex-column {
  flex-flow: column;
}
