<%
    overlay_attribute = DataCycleCore::Feature::OverlayAttributeService.call(content)
    overlay_attributes = overwritten_properties(content, overlay_attribute.first)
    default_options = {
      hidden_attributes: overlay_attribute,
      overlay_attributes: overlay_attributes,
      combined_attributes: [] # content.combined_property_names
    }
    options = default_options.merge(defined?(options) ? options || {} : {})
%>

<%= render *content_partial('header', { content: content, options: options }) %>

<%= render *content_partial('container_parent_properties', { content: content, options: options }) if DataCycleCore::Feature::Container.enabled? && content.try(:parent).present? %>

<% if content.translations.size > 1 && @include_parameters.include?('translations') %>
  <inLanguage><%= content.translated_locales %></inLanguage>
<% else %>
  <inLanguage><%= content.translated_locales.include?(@language.to_sym) ? @language : content.first_available_locale %></inLanguage>
<% end %>

<%= render *content_partial('container_children_properties', { content: content, options: options }) if DataCycleCore::Feature::Container.enabled? && content.content_type?('container') %>

<%= render *content_partial('overlay_properties', { content: content, options: options }) %>

<%= render *content_partial('properties', { content: content, options: options }) %>

<% if @mode_parameters.include?('indesign') %>
    <Image href="file:///images/<%= content.id %><%= DataCycleCore::Serialize::Serializer::Asset.file_extension(DataCycleCore::Serialize::Serializer::Asset.mime_type(serialized_content: nil, content: content)) %>" />
<% end %>

<%#= render render_partial('combined_properties'), content: content, options: options %>

<%= render *content_partial('footer', { content: content, options: options }) %>
