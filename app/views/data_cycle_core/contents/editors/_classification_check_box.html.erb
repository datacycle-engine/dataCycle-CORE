<%= render 'data_cycle_core/contents/editors/attribute', key: key, definition: definition, value: value, options: options, content: content, parent: local_assigns[:parent] do %>

  <%= attribute_edit_label_tag(**local_assigns) %>

  <% classification_items = DataCycleCore::ClassificationAlias.includes(:classification_tree_label, :primary_classification).where(classification_trees: { parent_classification_alias_id: nil }, classification_tree_labels: { name: definition['tree_label'] }) %>

  <ul class="no-bullet classification-checkbox-list">
    <%= collection_check_boxes(nil, key, classification_items, :primary_classification_id, :internal_name, {}, { namespace: local_assigns.dig(:options, :prefix) }) do |cb| %>
      <li class="checkbox-wrap dc-checkbox">
        <% disabled = !cb.object.assignable || !attribute_editable?(key, definition, options, content) %>
        <% checked = (value&.pluck(:id)&.include?(cb.value) || (local_assigns.dig(:options, :edit_scope) == 'new' && classification_items.to_a.select { |c| c.name.in?(definition&.dig('ui', 'edit', 'default_value') || []) }.map(&:primary_classification_id).include?(cb.value))) %>
        <%= hidden_field_tag "#{key}[]", cb.value, id: "#{key}_#{cb.value}_hidden" if disabled && checked %>
        <%= cb.check_box value: cb.value,
                          checked: checked,
                          disabled: disabled %>
        <%= cb.label data: { dc_tooltip: classification_tooltip(cb.object) } do %>
          <%= cb.text %> <%= tag.i(class: 'fa fa-info-circle') if cb.object.try(:description).present? %>
        <% end %>
      </li>
    <% end %>
  </ul>

  <% value.presence&.each do |c| %>
    <%= hidden_field_tag key + '[]', c.id %>
  <% end unless attribute_editable?(key, definition, options, content) %>

<% end if classification_tree_label_has_children?(definition['tree_label']) %>
