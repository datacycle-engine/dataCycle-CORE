<%= render 'data_cycle_core/contents/editors/attribute', key: key, definition: definition, value: value, options: options.merge('class' => 'object embedded_object'), content: content, parent: local_assigns[:parent] do %>

  <% objects = value.presence&.group_by { |s| [s.dtstart.strftime('%Y-%m-%d'), s.rrule&.gsub(/T\d+Z/, '')] }&.values %>

  <%= embedded_editor_header(**local_assigns) %>

  <div class="embedded-object" id="<%= "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id(key)}" %>"
    data-locale="<%= I18n.locale.to_s %>"
    data-key="<%= key %>"
    data-label="<%= translated_attribute_label(key, definition, content, options) %>"
    data-definition="<%= definition.to_json %>"
    data-options="<%= options.to_json %>"
    data-total="<%= value.presence&.size %>"
    data-ids="<%= value.presence&.ids %>"
    data-max="<%= definition.dig('validations', 'max') || 0 %>"
    data-min="<%= definition.dig('validations', 'min') || 0 %>"
    data-content-id="<%= content.id %>"
    data-content-type="<%= content.class.table_name %>"
    data-template-name="<%= content.thing_template.persisted? ? content.template_name : nil %>"
    data-template="<%= to_query_params(thing_template: content.thing_template).to_json %>"
    data-url="<%= thing_path(content) %>"
    data-write="<%= attribute_editable?(key, definition, options, content) %>"
    data-accordion
    data-allow-all-closed="true"
    data-multi-expand="true">

    <% if objects.present? %>
      <% objects.each_with_index do |object, index| %>
        <%= render_embedded_object_partial(key: key,
          definition: definition,
          parameters: {
            object: object,
            index: index,
            options: options,
            new_content: local_assigns[:new_content].to_s == 'true',
            attribute_locale: local_assigns[:attribute_locale],
            duplicated_content: local_assigns[:duplicated_content].to_s == 'true',
            locale: I18n.locale.to_s
          },
          content: content
        ) %>
      <% end %>

    <% else %>
      <%= hidden_field_tag key + '[]', nil, id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id(key)}_default" %>
    <% end %>
  </div>

<% end %>
