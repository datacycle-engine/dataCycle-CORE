<% I18n.with_locale(locale) do %>
  <% object = DataCycleCore::DataHashService.get_internal_template(local_assigns[:embedded_template].presence || definition['template_name']) if local_assigns[:object].blank? %>

  <%= tag.div class: "content-object-item draggable_#{sanitize_to_id(key)} accordion-item#{ ' is-active' if (!local_assigns[:hide_embedded] && !definition.dig('ui', 'edit', 'hide_onload')) || object.new_record? || local_assigns[:duplicated_content] }",
        id: "#{sanitize_to_id(key)}_item_#{index}",
        data: {
          id: object.id,
          index: index,
          accordion_item: true
        } do %>
    <span class="embedded-header">
      <% if attribute_editable?(key, definition, options, content) %>
        <span class="draggable-handle"><i class="fa fa-bars" aria-hidden="true"></i></span>
        <span class="swap-prev swap-button disabled" data-dc-tooltip="<%= t('embedded.move_up', locale: active_ui_locale) %>"><i class="fa fa-arrow-up" aria-hidden="true"></i></span>
        <span class="swap-next swap-button disabled" data-dc-tooltip="<%= t('embedded.move_down', locale: active_ui_locale) %>"><i class="fa fa-arrow-down" aria-hidden="true"></i></span>
      <% end %>
    </span>

    <div class="accordion-title">
      <span class="title">
        <%= tag.span(tag.i(class: 'fa fa-ban', aria_hidden: true), class: 'readonly-icon') unless attribute_editable?(key, definition, options, content) %>
        <%= tag.span(tag.i(class: 'fa fa-language translatable-attribute-icon'), class: 'translatable-icon') if attribute_translatable?(key, definition, content) %>
        <%= render 'data_cycle_core/shared/icon', icon_type: object.template_name.underscore_blanks, icon_class: object.class.name.demodulize.underscore %>
        <span class="embedded-label"><%= object.translated_template_name(active_ui_locale) %></span>
        <%= render 'data_cycle_core/contents/helper_text', key: key, definition: definition, content: contextual_content(local_assigns) %>
        <%= render('data_cycle_core/contents/content_score', key: nil, content: object, definition: object.content_score_definition(nil)) if object.try(:content_score_allowed?) %>
        <%= tag.span object.try(object.embedded_title_property_name), title: object.try(object.embedded_title_property_name), class: "embedded-title#{' visible' if object.try(object.embedded_title_property_name).present?}" if object.embedded_title_property_name.present? %>
      </span>
    </div>

    <% if attribute_editable?(key, definition, options, content) %>
      <%= button_tag tag.i(class: 'fa fa-times'), type: :button, class: 'button removeContentObject alert', data: {
                confirm_delete: content&.translatable? && definition&.dig('translated').to_s == 'true' && object&.translations&.many? ? t('actions.delete_with_translated_html', locale: active_ui_locale) : nil
              } %>
    <% end %>

    <%= hidden_field_tag("#{embedded_key_prefix(key, index)}[id]", object.id) unless object.new_record? || local_assigns[:duplicated_content] %>
    <%= hidden_field_tag("#{embedded_key_prefix(key, index)}[template_name]", object.template_name, class: 'embedded-template') %>

    <% if object.new_record? || local_assigns[:duplicated_content] %>
      <div class="embedded-properties accordion-content" data-tab-content>
        <%= render 'data_cycle_core/contents/editors/embedded/single_item', local_assigns.merge({ object: object, locale: I18n.locale, event_data: { newContent: object.new_record? } }) %>
      </div>
    <% else %>
      <div class="embedded-properties accordion-content remote-render" data-tab-content
        data-remote-path="data_cycle_core/contents/editors/embedded/single_item"
        data-remote-options="<%= to_query_params(local_assigns.merge({ object: object, locale: I18n.locale, event_data: { newContent: object.new_record? } })).to_json %>">
      </div>
    <% end %>
  <% end %>
<% end %>
