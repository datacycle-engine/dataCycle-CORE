<% I18n.with_locale(locale) do %>
  <%
    object = DataCycleCore::DataHashService.get_internal_template(definition['template_name']) if local_assigns[:object].blank?
    validation_properties = ordered_validation_properties(validation: object.schema, scope: :edit)
    new_prefix = embedded_key_prefix(key, index)
  %>

  <%= tag.div class: "content-object-item textblock draggable_#{sanitize_to_id(key)}",
    id: "#{sanitize_to_id(key)}_item_#{index}",
    data: {
      id: object.id,
      index: index
    } do %>
    <%= hidden_field_tag("#{new_prefix}[id]", object.id) unless object.new_record? || local_assigns[:duplicated_content] %>

    <% content_for(:text_editor_header) do %>
      <span class="embedded-header dc-sticky-bar form-element validation-container" data-key="<%= "#{new_prefix}[name]" %>">
        <% if attribute_editable?(key, definition, options, content) %>
          <span class="draggable-handle"><i class="fa fa-bars" aria-hidden="true"></i></span>
          <span class="swap-prev swap-button disabled" data-dc-tooltip="<%= t('embedded.move_up', locale: active_ui_locale) %>"><i class="fa fa-arrow-up" aria-hidden="true"></i></span>
          <span class="swap-next swap-button disabled" data-dc-tooltip="<%= t('embedded.move_down', locale: active_ui_locale) %>"><i class="fa fa-arrow-down" aria-hidden="true"></i></span>
        <% end %>

        <% if object.try(:translatable_property_names)&.include?('text') %>
          <span class="translated"><i class="fa fa-language" aria-hidden="true"></i></span>
        <% end %>

        <%= text_field_tag "#{new_prefix}[name]",
          I18n.with_locale(local_assigns[:attribute_locale]){ object.try(:name) },
          class: 'form-control',
          placeholder: translated_attribute_label("#{new_prefix}[name]", validation_properties['name'], content, options),
          readonly: !attribute_editable?("#{new_prefix}[name]", validation_properties['name'], options, content) %>
      </span>

      <% if attribute_editable?(key, definition, options, content) %>
        <button type="button" class="button removeContentObject alert dc-sticky-bar"><i class="fa fa-times"></i></button>
      <% end %>
    <% end %>

    <%= render_attribute_editor key: "[text]",
                                prefix: new_prefix,
                                definition: validation_properties['text'],
                                value: I18n.with_locale(local_assigns[:attribute_locale]){ object.try(:text) } ,
                                parameters: {
                                  options: (validation_properties['text'].presence&.dig('editor', 'options') || {}).merge(prefix: local_assigns.dig(:options, :prefix)), parent: object
                                },
                                content: content %>
  <% end %>
<% end %>
