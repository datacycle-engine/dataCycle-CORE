<% content_for :attribute_group, flush: true do %>
  <% validation_properties = ordered_validation_properties(validation: definition, scope: :edit) %>
  <% validation_properties.presence&.each do |o_key, prop| %>
    <%= render_attribute_editor key: o_key,
                                prefix: "#{local_assigns[:prefix]}#{key.delete_suffix("[#{key.attribute_name_from_key}]")}",
                                definition: prop,
                                value: local_assigns[:parent]&.embedded? ? embedded_attribute_value(content, parent, o_key, prop, local_assigns[:attribute_locale], local_assigns[:translate].to_s == 'true') : contextual_content(local_assigns).try(o_key),
                                parameters: {
                                  options: local_assigns[:options],
                                  parent: local_assigns[:parent],
                                  hide_embedded: local_assigns[:hide_embedded]
                                },
                                content: content %>
  <% end %>
<% end %>

<%= attribute_group_container(html_content: yield_content!(:attribute_group), **local_assigns) %>
