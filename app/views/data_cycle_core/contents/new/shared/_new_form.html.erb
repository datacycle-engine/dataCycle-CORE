<%
  template = local_assigns[:template]&.template_thing if local_assigns[:template].is_a?(DataCycleCore::ThingTemplate)
  asset_model_name = local_assigns[:asset_class]&.constantize&.model_name
  primary_attribute_key = new_dialog_config(template, 'asset')&.values&.first&.first
%>

<%= form_with url: things_path,
  local: !local_assigns[:object_browser],
  html: {
    class: "validation-form multi-step#{' disabled' if local_assigns[:search_required] && local_assigns[:search_param].blank? && cannot?(:create_without_search, template || DataCycleCore::Thing)}",
    data: to_query_params(local_assigns.slice(:template, :key, :search_param, :search_required, :scope, :parent, :content, :locale, :options, :content_uploader).merge({ primary_attribute_key: primary_attribute_key, template_translation: asset_model_name&.human(count: 2, locale: active_ui_locale) }))
  } do %>

  <div class="form-crumbs"></div>

  <% if template.present? %>
    <%= render 'data_cycle_core/contents/new/shared/search_warning' if local_assigns[:search_required] && local_assigns[:search_param].blank? && cannot?(:create_without_search, template) %>

    <%= hidden_field_tag :template, template.template_name, id: "#{local_assigns.dig(:options, :prefix)}template" %>
    <%= render_new_form(template: template, parameters: local_assigns) %>
  <% else %>
    <%= render 'data_cycle_core/contents/new/shared/search_warning', warning: true if local_assigns[:search_required] && local_assigns[:search_param].blank? && cannot?(:create_without_search, DataCycleCore::Thing) %>

    <fieldset class="active template">
      <legend><%= t('actions.choose_type', locale: active_ui_locale) %></legend>
      <div class="form-element">
        <%= label_tag "#{local_assigns.dig(:options, :prefix)}template", t('common.data_type', locale: active_ui_locale) %>
        <div class="v-select white">
          <%= select_tag(
            :template,
            options_for_select(
              new_content_select_options(
                query_methods: local_assigns[:query_methods],
                content: local_assigns[:content],
                scope: local_assigns[:scope]
              ).map { |t| [t.translated_template_name(active_ui_locale), t.template_name] }
            ),
            {
              class: 'single-select',
              data: {
                tree_label: 'Inhaltstypen',
                allow_clear: false
              },
              id: "#{local_assigns.dig(:options, :prefix)}template"
            }
          ) %>
        </div>
      </div>
    </fieldset>
    <fieldset class="content-fields"></fieldset>
  <% end %>

  <div class="buttons">
    <% unless local_assigns[:content_uploader] %>
      <button class="button reset" data-disable type="reset">
        <%= t('actions.reset', count: 1, locale: active_ui_locale) %>
      </button>
    <% end %>
    <button class="button prev" type="button">
      <%= t('actions.back', locale: active_ui_locale) %>
    </button>
    <button class="button next" data-disable type="button">
      <%= t('actions.next', locale: active_ui_locale) %>
    </button>
    <% if local_assigns[:content_uploader] %>
      <button class="button submit warning set-all-attributes"
              data-disable
              data-primary-attribute-label="<%= translated_attribute_label(
                  primary_attribute_key,
                  local_assigns[:template]&.properties_for(primary_attribute_key),
                  local_assigns[:template],
                  {}
                ) %>"
              type="button"
              title="<%= t('upload.copy_all_title',
                single: asset_model_name&.human(count: 1, locale: active_ui_locale),
                multiple: asset_model_name&.human(count: 2, locale: active_ui_locale),
                locale: active_ui_locale) %>">
        <%= t('actions.set_all_attributes', locale: active_ui_locale) %>
        <span class="copy-icon fa-stack">
          <i class="fa fa-clone"></i>
          <i class="fa fa-arrow-right fa-stack-1x"></i>
        </span>
      </button>
    <% end %>
    <%= button_tag t("actions.#{local_assigns[:content_uploader] ? 'set_and_next' : 'save'}", locale: active_ui_locale),
      type: :submit,
      class: "button success submit",
      disabled: local_assigns[:search_required] && local_assigns[:search_param].blank? && cannot?(:create_without_search, local_assigns[:template] || DataCycleCore::Thing),
      data: {
        disable_with: "#{t("actions.#{local_assigns[:content_uploader] ? 'set_and_next' : 'save'}", locale: active_ui_locale)} <i class='fa fa-spinner fa-spin fa-fw'></i>"
        } %>
  </div>

<% end %>
