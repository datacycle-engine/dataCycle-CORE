<%= render 'data_cycle_core/contents/viewers/attribute',
      local_assigns.merge(data_attributes: {
        id: value.presence&.ids || [],
        editor: 'embedded_object'
      }) do %>

  <% objects = value&.order(Arel.sql("(metadata ->> 'publish_at')::timestamptz ASC"))&.to_a || [] %>
  <% objects = objects.concat(new_relations(options.dig('item_diff'), 'things').order(Arel.sql("(metadata ->> 'publish_at')::timestamptz ASC")).to_a) if changes_by_mode(options.dig('item_diff'), '+').present? %>

  <div class="publication-list">
    <!-- # TODO: move to value after final refactor_data_definition migration -->
    <% objects&.each_with_index do |publication, idx| %>
      <% classification_attributes = ordered_validation_properties(validation: publication.schema, scope: :show)
                  &.select { |k, v| v['type'] == 'classification' && (Array(DataCycleCore::ClassificationTreeLabel.find_by(name: v['tree_label'])&.visibility) & ['show', 'show_more']).size.positive? }
                  &.map { |k, v| [k, v['label']] }
                  .to_h %>
      <% if idx.zero? %>
        <div class="publication-row title-row">
          <span class="publication-attribute publication-date"><span class="icon"><i class="fa fa-calendar" aria-hidden="true"></i></span> <%= t('data_cycle_core.publication_date', locale: active_ui_locale) %></span>

          <% classification_attributes.presence&.each_value do |c_attribute| %>
            <span class="publication-attribute"><%= render 'data_cycle_core/shared/icon', icon_type: c_attribute.underscore_blanks, icon_class: 'classification_tree_label' %><%= c_attribute %></span>
          <% end %>
        </div>
      <% end %>

      <% mode_changes = changes_by_mode(changes_by_value(options.dig('item_diff'), diff_target_id(publication)), '~') %>
      <% publication_changes = publication.diff(diff_target_by_id(**local_assigns.merge({ object: publication }))&.get_data_hash) if mode_changes.present? %>

      <div class="publication-row detail-type embedded <%= changes_class(options.dig('item_diff'), publication.try('thing_id') || publication.id) %>">
        <% date_changes = attribute_changes(publication, publication_changes, 'publish_at') if mode_changes.present? %>

        <span class="publication-attribute publication-date <%= changes_mode(date_changes) %>">
          <%= publication_attribute_changes(date_changes, publication) %>
        </span>

        <% classification_attributes.each_key do |c_attribute| %>
          <% publication_changes = [] %>
          <% publication_changes = attribute_changes(publication, publication_changes, c_attribute) if mode_changes.present? %>

          <span class="detail-content tags publication-attribute">
            <% objects = publication.send(c_attribute).presence&.map(&:primary_classification_alias) || [] %>

            <% objects = objects.concat(new_relations(publication_changes, 'classifications').includes(:classification_aliases).map(&:primary_classification_alias)) if changes_by_mode(publication_changes, '+').present? %>

            <% objects.presence&.each do |a| %>
              <span class="tag <%= changes_class(publication_changes, a.primary_classification.id) %>" data-dc-tooltip="<%= classification_tooltip(a) %>"><%= a.internal_name %></span>
            <% end %>
          </span>
        <% end %>
      </div>
    <% end %>
  </div>

<% end %>
