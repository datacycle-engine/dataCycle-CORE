<%= render 'data_cycle_core/contents/viewers/attribute',
      key: key,
      definition: definition,
      value: value,
      options: options.merge({ 'class' => 'embedded_link_array object_browser media' }),
      content: local_assigns[:content],
      parent: local_assigns[:parent],
      data_attributes: {
        id: (value&.except(:limit, :offset)&.ids || [] ),
        editor: "object_browser"
      } do %>

  <ul class="content-tiles">
    <% objects = value&.includes(:translations) %>
    <% objects = (objects.to_a || []).concat(new_relations(options.dig(:item_diff), 'things').includes(:translations).to_a) if changes_by_mode(options.dig(:item_diff), '+').present? %>

    <% objects&.each do |item| %>
      <%= render_linked_partial key: "#{key}[]",
                                definition: definition,
                                content: content,
                                parameters: {
                                  options: options,
                                  object: item,
                                  object_id: [item.id],
                                  prefix: local_assigns.dig(:options, :prefix),
                                  tile_links: true
                                } %>
    <% end %>

    <div class="clear-both">
      <%= link_to t('common.load_all', locale: active_ui_locale),
            load_more_linked_objects_thing_path(contextual_content(local_assigns)),
            id: "load_more_#{content&.id}_#{sanitize_to_id(key)}",
            class: 'load-more-linked-contents button small secondary',
            data: {
              disable_with: "<i class='fa fa-spinner fa-spin'></i> #{t('common.loading', locale: active_ui_locale)}",
              key: key.attribute_name_from_key,
              complete_key: key,
              content_id: content&.id,
              content_type: content&.class&.table_name,
              definition: definition&.to_json,
              options: options&.to_json,
              page: params.fetch(:page, 1).to_i + 1,
              load_more_action: :show,
              locale: I18n.locale
            } if objects.try(:total_pages)&.positive? && !objects&.last_page? %>
    </div>
  </ul>

<% end %>
