<% content_for(:tile_header_buttons, tag.span(tag.i(class: 'fa fa-arrows-h'), class: 'inverse-linked has-tip', data: { dc_tooltip: t('common.inverse_linked', locale: active_ui_locale) })) if definition&.dig('link_direction') %>

<% content_for(:tile_header_buttons, render('data_cycle_core/contents/viewers/shared/buttons', content: object, definition: definition, options: local_assigns[:options], removable: local_assigns[:options]&.[]('force_tile_buttons') || (local_assigns[:edit_buttons] && can?(:update, DataCycleCore::DataAttribute.new(key, definition, local_assigns[:options], content, :update))))) %>

<% content_for(:tile_header_buttons, link_to(tag.i(class: 'fa fa-info'), '#', class: 'show-sidebar-details', data: { dc_tooltip: t('object_browser.details.button', locale: active_ui_locale) })) %>

<%= tag.li(class: [
  'item',
  'content',
  'copy-single',
  object.class.name.demodulize.underscore_blanks.dasherize,
  object.schema_type&.underscore&.dasherize,
  object.template_name.underscore.dasherize,
  changes_class(local_assigns.dig(:options, :item_diff), object.id),
  local_assigns[:tile_classes],
  object.id.in?(local_assigns[:objects] || []) ? 'active' : nil,
  object.hard_content_warnings? ? 'hard-warnings' : nil,
  DataCycleCore::Feature::TileBorderColor.class_string(object),
  thing_content_score_class(object)
].compact_blank.join(' '),
data: {
  id: local_assigns[:object_id] || object.id,
  content_score: object.try(:internal_content_score)&.round
}) do %>
  <div class="content-link">
    <i class="fa fa-check object-browser-tile-checkbox" aria-hidden="true"></i>

    <%= hidden_field_tag key, object.id, id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id(key)}" if local_assigns[:edit_buttons] %>

    <%= tag.div(yield_content!(:tile_header_buttons), class: 'buttons') if content_for?(:tile_header_buttons) %>

    <%= yield %>

    <%= yield_content!(:tile_bottom_buttons) if content_for?(:tile_bottom_buttons) %>
  </div>
<% end %>
