# frozen_string_literal: true

json ||= {}
json['dc:classification'] ||= []

classification_aliases = content.classifications.classification_aliases.includes(:classification_tree_label).reorder(nil).order('classification_tree_labels.name ASC, classification_aliases.order_a ASC').references(:classification_tree_labels)

key_new = 'dc:classification'
new_options = options.dup
new_options[:fields] = subtree_for(key_new, options[:fields])
new_options[:include] = subtree_for(key_new, options[:include])
new_options[:languages] = options[:languages]
new_options[:full] = included_attribute?('dc:classification', options[:include]) || included_attribute?('dc:classification', options[:fields])

json.merge! render 'classifications', classification_aliases:, key: key_new, definition: {}, options: new_options
json.reject { |_k, v| v.blank? }
