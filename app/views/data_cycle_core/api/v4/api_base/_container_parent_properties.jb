# frozen_string_literal: true

json ||= {}
if content&.parent&.content_type?('container') && options.dig(:disable_parent).blank?
  data = content.parent
  new_fields = subtree_for('isPartOf', options[:fields])
  if included_attribute?('isPartOf', options[:include])
    if (options[:field_filter] && new_fields.present?) || !options[:field_filter]
      new_include = subtree_for('isPartOf', options[:include])
      Rails.cache.fetch(api_v4_cache_key(data, options[:languages], new_include, new_fields, @api_subversion, nil, @linked_stored_filter&.id, options[:classification_trees]), expires_in: 1.year + Random.rand(7.days)) do
        json['isPartOf'] = render 'content_details', content: content.parent, options: options.merge({ disable_children: true, header_type: :full, include: new_include, fields: new_fields })
      end
    end
  elsif !options[:field_filter]
    json['isPartOf'] = render 'content_header', content: data, options: inherit_options({ fields: new_fields, field_filter: options[:field_filter], header_type: :minimal }, options)
  end
end

json
