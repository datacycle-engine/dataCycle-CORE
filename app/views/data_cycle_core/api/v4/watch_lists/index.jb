# frozen_string_literal: true

json = {}
json.merge! render 'context', languages: @language

queue = DataCycleCore::WorkerPool.new(@permitted_params.dig(:section, :meta)&.to_i&.zero? ? 1 : DataCycleCore::ApiService.allowed_thread_count)

unless @permitted_params.dig(:section, :'@graph')&.to_i&.zero?
  queue.append do
    json['@graph'] = @watch_lists.map do |item|
      {
        '@id' => item.id,
        '@type' => 'Thing',
        'name' => item.name,
        'dc:entityUrl' => api_v4_collection_url(@api_subversion, id: item.id),
        'dc:item_count' => item.watch_list_data_hashes.count
      }
    end
  end
end

queue.append do
  json.merge! render 'pagination_links',
                     objects: @watch_lists,
                     object_url: ->(params) { File.join(request.protocol + request.host + ':' + request.port.to_s, request.path) + '?' + params.to_query }
end

queue.wait!

json
