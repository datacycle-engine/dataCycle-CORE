# frozen_string_literal: true

json = {}
json.merge! render 'context', languages: @language

pagination_objects = @pagination_contents || @contents
pagination_objects.async_total_count unless @permitted_params.dig(:section, :meta)&.to_i&.zero?

unless @permitted_params.dig(:section, :@graph)&.to_i&.zero?
  json['@graph'] = []

  @contents.each do |item|
    json['@graph'] << Rails.cache.fetch(api_v4_cache_key(item, @language, @include_parameters, @fields_parameters, @api_subversion, nil, @linked_stored_filter&.id, @classification_trees_parameters), expires_in: 1.year + Random.rand(7.days)) do
      I18n.with_locale(item.first_available_locale(@language)) do
        render('content_details', content: item, options: { languages: @language })
      end
    end
  end
end

json.merge! render 'pagination_links',
                   objects: pagination_objects,
                   object_url: ->(params) { api_v4_things_select_by_external_key_url(**params) }

json.merge! render 'live_data'

json
