# frozen_string_literal: true

json = {}
json['@id'] = @content.id

if @content.is_a?(DataCycleCore::Thing)
  api_v4_json = begin
    JSON.parse(render(template: 'data_cycle_core/api/v4/contents/show'))
  rescue JSON::ParserError
    {}
  end

  json['@context'] = api_v4_json['@context'] if api_v4_json['@context'].present?
  thing_json = api_v4_json.dig('@graph', 0) || {}

  raise DataCycleCore::Error::ApiCacheReadError.new({ cache_key:, cache_content: thing_json }) unless thing_json['@id'] == @content.id

  json.merge!(thing_json)
end

json['token'] = @token if @token.present?
json['webhookSource'] = @content.webhook_source if @content.webhook_source.present?
json['externalKeys'] = @content.webhook_data.external_keys if @content.webhook_data&.external_keys.present?
json['originalId'] = @content.original_id if @content.original_id.present?
json['originalExternalKeys'] = @content.webhook_data.original_external_keys if @content.webhook_data&.original_external_keys.present?

json
