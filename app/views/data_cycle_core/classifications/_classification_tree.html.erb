<li id="<%= classification_tree.id %>" class="<%= type %>" data-id="<%= classification_tree.sub_classification_alias.try(:id) %>">
  <span class="inner-item">
    <%= tag.i(class: 'fa fa-bars draggable-handle') if can?(:edit, classification_tree_label) %>
    <%= tag.i(class: 'fa fa-compress merge-dropzone', data: { dc_tooltip: t('classification_administration.merge.zone_tooltip', locale: active_ui_locale) }) if can?(:edit, classification_tree_label) && can?(:merge, classification_tree.sub_classification_alias) %>

    <%= tag.i(class: 'primary-color fa fa-paperclip', data: { dc_tooltip: t('classification_administration.mapped_to', locale: active_ui_locale) }) if classification_tree.sub_classification_alias.mapped_to.present? %>

    <%= link_to classification_title(classification_tree.sub_classification_alias),
                classifications_path(classification_tree_id: classification_tree.id),
                class: "name",
                data: {
                  dc_tooltip: classification_tree.sub_classification_alias.full_path
                } %>

    <%= link_to tag.i(class: 'fa fa-pencil'), '#',
                class: 'edit',
                data: {
                  dc_tooltip: t('actions.edit_data', data: classification_tree.sub_classification_alias.try(:internal_name), locale: active_ui_locale)
                } if can?(:update, classification_tree.sub_classification_alias) || can?(:map_classifications, classification_tree.sub_classification_alias) %>

    <%= link_to tag.i(class: 'fa fa-trash-o'),
                classifications_path(classification_tree_id: classification_tree.id),
                class: 'destroy',
                data: {
                  confirm: tag.div(class: 'remote-render', data: { remote_path: 'data_cycle_core/classifications/classification_alias_removal_warning', remote_options: CGI::escapeHTML(to_query_params(classification_alias: classification_tree.sub_classification_alias).to_json) }),
                  disable_with: tag.i(class: 'fa fa-spinner fa-spin'),
                  dc_tooltip: t('actions.delete_with_data', data: classification_tree.sub_classification_alias.try(:internal_name), locale: active_ui_locale)
                } if can?(:destroy, classification_tree.sub_classification_alias) %>

    <% if @classification_polygon_counts&.key?(classification_tree.sub_classification_alias.id) %>
      <% overlay_id = SecureRandom.hex(10) %>
      <%= link_to tag.i(class: 'fa fa-map'), '#', class: 'polygon-map-link', data: {
                    open: overlay_id,
                    dc_tooltip: t('classification_administration.classification_polygon.link_tooltip', locale: active_ui_locale)
                  } %>

      <div class="reveal classification-polygon-reveal" id="<%= overlay_id %>" data-reveal data-delayed-init>
        <h3><%= classification_title(classification_tree.sub_classification_alias) %></h3>

        <div class="geographic remote-render"
        data-remote-path="data_cycle_core/classifications/classification_polygon_map"
        data-remote-options="<%= to_query_params({ classification_alias: classification_tree.sub_classification_alias }).to_json %>">
        </div>

        <button class="close-button" data-close aria-label="Close modal" type="button">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
    <% end %>

    <%= link_to tag.i(class: 'fa fa-clipboard'), '#',
                class: 'copy-to-clipboard',
                data: {
                  value: classification_tree.sub_classification_alias.try(:id),
                  dc_tooltip: t('actions.copy_classification_alias_id_to_clipboard', locale: active_ui_locale)
                } if can?(:copy_to_clipboard, classification_tree.sub_classification_alias) %>

    <%= link_to tag.i(class: 'fa fa-list'),
              root_path(mode: 'tree', ctl_id: classification_tree_label.id, reset: true, anchor: (Array.wrap(ancestors) + [classification_tree.id]).join('+')),
              class: 'contents-list',
              target: :_blank,
              data: {
                dc_tooltip: t('data_cycle_core.show_contents_for_tree_label', data: classification_tree.sub_classification_alias.try(:internal_name), locale: active_ui_locale)
              } %>

    <%= tag.span(class: 'classification-color-icon copy-to-clipboard', style: classification_style(classification_tree.sub_classification_alias), data: { dc_tooltip: DataCycleCore::ClassificationAlias.human_attribute_name("ui_configs/color", locale: active_ui_locale), value: classification_tree.sub_classification_alias.color }) if classification_tree.sub_classification_alias.color? %>

    <%= tag.span(tag.img(class: 'lazyload', data: { src: classification_tree.sub_classification_alias.icon }), class: 'classification-icon copy-to-clipboard', data: { dc_tooltip: DataCycleCore::ClassificationAlias.human_attribute_name("ui_configs/icon", locale: active_ui_locale), value: classification_tree.sub_classification_alias.icon }) if classification_tree.sub_classification_alias.icon? %>

    <%= tag.i(
      class: 'fa fa-exclamation-triangle warning-color classification-mappings-queued',
      data: {
        dc_tooltip: I18n.t('controllers.success.classification_mappings_queued', locale: active_ui_locale)
      }
    ) if @queue_classification_mappings&.include?(classification_tree.classification_alias_id) %>
  </span>

  <%= tag.div(class: 'remote-render inverted classification-alias-form-container', data: { remote_path: 'data_cycle_core/classifications/classification_alias_form', remote_options: to_query_params(classification_tree_label: classification_tree_label, classification_tree: classification_tree).to_json }) if can?(:update, classification_tree.sub_classification_alias) || can?(:map_classifications, classification_tree.sub_classification_alias) %>

  <ul class="children <%= 'draggable-container' if can?(:edit, classification_tree_label) %> <%= 'move-to-tree' if can?(:move_to_tree, classification_tree_label) %>"></ul>
</li>
